{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async limit => {\n  const response = await axios.get(`https://fakestoreapi.com/products?limit=${limit}`);\n  const localProducts = JSON.parse(localStorage.getItem('localProducts')) || [];\n  return [...response.data, ...localProducts];\n});\nexport const addProduct = createAsyncThunk('products/addProduct', async (product, {\n  dispatch\n}) => {\n  // Сохраняем новый продукт в локальном хранилище\n  const localProducts = JSON.parse(localStorage.getItem('localProducts')) || [];\n  const newProduct = {\n    ...product,\n    id: Date.now()\n  }; // Генерируем уникальный id\n  localProducts.push(newProduct);\n  localStorage.setItem('localProducts', JSON.stringify(localProducts));\n  return newProduct;\n});\nexport const updateProduct = createAsyncThunk('products/updateProduct', async product => {\n  const response = await axios.put(`https://fakestoreapi.com/products/${product.id}`, product);\n  return response.data;\n});\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState: {\n    items: [],\n    status: 'idle'\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload;\n    }).addCase(fetchProducts.rejected, state => {\n      state.status = 'failed';\n    }).addCase(addProduct.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    });\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchProducts","limit","response","get","localProducts","JSON","parse","localStorage","getItem","data","addProduct","product","dispatch","newProduct","id","Date","now","push","setItem","stringify","updateProduct","put","productsSlice","name","initialState","items","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/home/beardrubyblue/Документы/market_maxima/src/features/products/ProductSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async (limit) => {\n  const response = await axios.get(`https://fakestoreapi.com/products?limit=${limit}`);\n  const localProducts = JSON.parse(localStorage.getItem('localProducts')) || [];\n  return [...response.data, ...localProducts];\n});\n\nexport const addProduct = createAsyncThunk('products/addProduct', async (product, { dispatch }) => {\n  // Сохраняем новый продукт в локальном хранилище\n  const localProducts = JSON.parse(localStorage.getItem('localProducts')) || [];\n  const newProduct = { ...product, id: Date.now() }; // Генерируем уникальный id\n  localProducts.push(newProduct);\n  localStorage.setItem('localProducts', JSON.stringify(localProducts));\n  return newProduct;\n});\n\nexport const updateProduct = createAsyncThunk(\n  'products/updateProduct',\n  async (product) => {\n    const response = await axios.put(`https://fakestoreapi.com/products/${product.id}`, product);\n    return response.data;\n  }\n);\n\n\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState: {\n    items: [],\n    status: 'idle',\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProducts.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchProducts.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.items = action.payload;\n      })\n      .addCase(fetchProducts.rejected, (state) => {\n        state.status = 'failed';\n      })\n      .addCase(addProduct.fulfilled, (state, action) => {\n        state.items.push(action.payload);\n      });\n  },\n});\n\nexport default productsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,wBAAwB,EAAE,MAAOG,KAAK,IAAK;EACvF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,2CAA2CF,KAAK,EAAE,CAAC;EACpF,MAAMG,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE;EAC7E,OAAO,CAAC,GAAGN,QAAQ,CAACO,IAAI,EAAE,GAAGL,aAAa,CAAC;AAC7C,CAAC,CAAC;AAEF,OAAO,MAAMM,UAAU,GAAGZ,gBAAgB,CAAC,qBAAqB,EAAE,OAAOa,OAAO,EAAE;EAAEC;AAAS,CAAC,KAAK;EACjG;EACA,MAAMR,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE;EAC7E,MAAMK,UAAU,GAAG;IAAE,GAAGF,OAAO;IAAEG,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;EAAE,CAAC,CAAC,CAAC;EACnDZ,aAAa,CAACa,IAAI,CAACJ,UAAU,CAAC;EAC9BN,YAAY,CAACW,OAAO,CAAC,eAAe,EAAEb,IAAI,CAACc,SAAS,CAACf,aAAa,CAAC,CAAC;EACpE,OAAOS,UAAU;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMO,aAAa,GAAGtB,gBAAgB,CAC3C,wBAAwB,EACxB,MAAOa,OAAO,IAAK;EACjB,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACsB,GAAG,CAAC,qCAAqCV,OAAO,CAACG,EAAE,EAAE,EAAEH,OAAO,CAAC;EAC5F,OAAOT,QAAQ,CAACO,IAAI;AACtB,CACF,CAAC;AAGD,MAAMa,aAAa,GAAGzB,WAAW,CAAC;EAChC0B,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC9B,aAAa,CAAC+B,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDI,OAAO,CAAC9B,aAAa,CAACiC,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAAC9B,aAAa,CAACoC,QAAQ,EAAGJ,KAAK,IAAK;MAC1CA,KAAK,CAACN,MAAM,GAAG,QAAQ;IACzB,CAAC,CAAC,CACDI,OAAO,CAACpB,UAAU,CAACuB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACP,KAAK,CAACR,IAAI,CAACiB,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeb,aAAa,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}